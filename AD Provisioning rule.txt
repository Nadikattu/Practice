<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Run_Rule_TO_Provision_AD">
  <Description>Rule to provision on AD.</Description>
  <Signature returnType="Map">
    <Inputs>
      <Argument name="log">
        <Description>  
      The log object associated with the SailPointContext.  
      </Description>
      </Argument>
      <Argument name="context">
        <Description>  
        A sailpoint.api.SailPointContext object that can be used to query the database if necessary.  
      </Description>
      </Argument>
    </Inputs>
  </Signature>
  <Source>  
import org.apache.log4j.Logger;
import java.util.List;
import java.util.ArrayList;
import sailpoint.object.*;
import sailpoint.object.ProvisioningPlan.*;
import sailpoint.object.ProvisioningPlan.AccountRequest;
import sailpoint.object.ProvisioningPlan.AttributeRequest;
import sailpoint.api.Provisioner;

Logger logger = Logger.getLogger("testlog");


Identity ident = context.getObjectByName(Identity.class, "Bill.white");

//String name = identity.getName();
String username = "Bill.white";
logger.info("Test rule.....");
  logger.info("username "+username);
  logger.info("ident "+ident);
// Creating the New ProvisioningPlan
ProvisioningPlan plan = new ProvisioningPlan();

//plan
plan.setIdentity(ident);
  logger.info("plan "+plan);
//Provisining Plan Account Request
AccountRequest  accountRequest = new AccountRequest();
   logger.info("AcountReq test 0 ");
System.out.println("AcountReq test 0");
String cn="CN="+username;
String dn=cn + ",OU=Dexperts,DC=dexperts,DC=local";
     logger.info("dn "+dn);

  accountRequest.setNativeIdentity(dn);
  
System.out.println("AcountReq test 1");

//AD application Name for Requested Ac
accountRequest.setApplication("Active Directory Application");

  // Create Operation
accountRequest.setOperation(ProvisioningPlan.AccountRequest.Operation.Create);
System.out.println("AcountReq test 2");
logger.info("accountRequest "+accountRequest);

//Add plan in accountRequest
 
plan.add(accountRequest);

 

// Adding default membership you can attribute request

AttributeRequest attributeRequest = new AttributeRequest();
System.out.println("AttributeReq test 3");
logger.info("attributeRequest 3"+attributeRequest);


attributeRequest.setName("memberOf");
System.out.println("AttributeReq test 4");


attributeRequest.setOperation(ProvisioningPlan.Operation.Add);
System.out.println("AttributeReq test 5");
String ManagedAttributesHR= "CN=HR,OU=Newyork,OU=Dexperts,DC=dexperts,DC=local";
attributeRequest.setValue(ManagedAttributesIT);
System.out.println("AttributeReq test 6");
 List list =new ArrayList();
System.out.println("List test 7");
accountRequest.add(attributeRequest);
System.out.println("AcountReq test 8");
list.add(accountRequest);
System.out.println("List test 9");
plan.setAccountRequests(list);
System.out.println("AcountReq test 10");
System.out.println("Plan"+plan.toXml());

logger.info("Plan....11"+plan.toXml());
Provisioner provisioiner = new Provisioner(context);
provisioiner.execute(plan);



</Source>
</Rule>
